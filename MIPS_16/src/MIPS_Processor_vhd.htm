<html>
<head>
<title>MIPS_Processor.vhd</title>
<style>
body   { color: #000000; background-color: #FFFFFF }
pre    { font-family: Courier New, monospace; font-size: 10pt; }
#t_com { color: #008000; font-style: italic; }
#t_kwd { color: #0000FF; }
#t_cns { color: #848484; }
#t_idt { }
#t_msb { }
#t_dir { color: #6B6D9C; }
#t_sdt { font-weight: bold; }
#t_sdv { }
#t_sdf { }
#t_sys { color: #6B6D9C; }
</style>
<meta name="Author" content="AHMAD, BZU">
<meta name="Generator" content="Active-HDL, Version StudentEdition, %COPYRIGHT%">
</head>
<body>
<br/>Active-HDL Student Edition<br/>
<pre>
<a name='line1'></a><span id=t_kwd>LIBRARY</span> <span id=t_idt>ieee</span>;
<a name='line2'></a><span id=t_kwd>USE</span> <span id=t_idt>ieee.std_logic_1164</span>.<span id=t_kwd>ALL</span>;
<a name='line3'></a><span id=t_kwd>USE</span> <span id=t_idt>ieee.std_logic_unsigned</span>.<span id=t_kwd>ALL</span>;
<a name='line4'></a><span id=t_kwd>USE</span> <span id=t_idt>ieee.numeric_std</span>.<span id=t_kwd>ALL</span>;
<a name='line5'></a><span id=t_kwd>USE</span> <span id=t_idt>work.MIPS_Types</span>.<span id=t_kwd>ALL</span>;
<a name='line6'></a>
<a name='line7'></a><span id=t_kwd>ENTITY</span> <span id=t_idt>MIPS_Processor</span> <span id=t_kwd>IS</span>
<a name='line8'></a><span id=t_kwd>END ENTITY</span> <span id=t_idt>MIPS_Processor</span>;
<a name='line9'></a>
<a name='line10'></a><span id=t_kwd>ARCHITECTURE</span> <span id=t_idt>SingleCycle</span> <span id=t_kwd>OF</span> <span id=t_idt>MIPS_Processor</span> <span id=t_kwd>IS</span>
<a name='line11'></a><span id=t_kwd>COMPONENT</span> <span id=t_idt>Mux4</span> <span id=t_kwd>IS</span>
<a name='line12'></a>    <span id=t_kwd>GENERIC</span> (<span id=t_idt>size</span>: <span id=t_sdt>POSITIVE</span> := <span id=t_cns>16</span>);
<a name='line13'></a>    <span id=t_kwd>PORT</span> (<span id=t_idt>I0</span>, <span id=t_idt>I1</span>, <span id=t_idt>I2</span>, <span id=t_idt>I3</span>: <span id=t_kwd>IN</span> <span id=t_sdt>STD_LOGIC_VECTOR</span> (<span id=t_idt>size</span>-<span id=t_cns>1</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>);
<a name='line14'></a>    <span id=t_idt>Selection</span>: <span id=t_kwd>IN</span> <span id=t_sdt>STD_LOGIC_VECTOR</span> (<span id=t_cns>1</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>);
<a name='line15'></a>    <span id=t_idt>Output</span>: <span id=t_kwd>OUT</span> <span id=t_sdt>STD_LOGIC_VECTOR</span> (<span id=t_idt>size</span>-<span id=t_cns>1</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>));
<a name='line16'></a><span id=t_kwd>END COMPONENT</span>;
<a name='line17'></a><span id=t_kwd>FOR ALL</span>: <span id=t_idt>Mux4</span> <span id=t_kwd>USE ENTITY</span> <span id=t_idt>work.Mux4_1(GenericMux</span>);
<a name='line18'></a>    
<a name='line19'></a><span id=t_kwd>COMPONENT</span> <span id=t_idt>Mux2</span> <span id=t_kwd>IS</span>
<a name='line20'></a>    <span id=t_kwd>GENERIC</span> (<span id=t_idt>size</span>: <span id=t_sdt>POSITIVE</span> := <span id=t_cns>16</span>);
<a name='line21'></a>    <span id=t_kwd>PORT</span> (<span id=t_idt>I0</span>, <span id=t_idt>I1</span>: <span id=t_kwd>IN</span> <span id=t_sdt>STD_LOGIC_VECTOR</span> (<span id=t_idt>size</span>-<span id=t_cns>1</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>);
<a name='line22'></a>    <span id=t_idt>Selection</span>: <span id=t_kwd>IN</span> <span id=t_sdt>STD_LOGIC</span>;
<a name='line23'></a>    <span id=t_idt>Output</span>: <span id=t_kwd>OUT</span> <span id=t_sdt>STD_LOGIC_VECTOR</span> (<span id=t_idt>size</span>-<span id=t_cns>1</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>));
<a name='line24'></a><span id=t_kwd>END COMPONENT</span>;
<a name='line25'></a><span id=t_kwd>FOR ALL</span>: <span id=t_idt>Mux2</span> <span id=t_kwd>USE ENTITY</span> <span id=t_idt>work.Mux2_1(GenericMux</span>);
<a name='line26'></a>    
<a name='line27'></a><span id=t_com>-- Clock --</span>
<a name='line28'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>CLK</span>: <span id=t_sdt>STD_LOGIC</span> := <span id=t_cns>'1'</span>;
<a name='line29'></a>
<a name='line30'></a><span id=t_com>-- Program Counter --</span>
<a name='line31'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>PC</span>: <span id=t_sdt>INTEGER</span> <span id=t_kwd>RANGE</span> <span id=t_cns>0</span> <span id=t_kwd>TO</span> <span id=t_cns>2</span>**<span id=t_cns>16</span> - <span id=t_cns>1</span> := <span id=t_cns>0</span>;
<a name='line32'></a>
<a name='line33'></a><span id=t_com>-- Return Register --</span>
<a name='line34'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>Ra</span>: <span id=t_idt>WORD</span> := <span id=t_idt>X</span><span id=t_cns>"0000"</span>;
<a name='line35'></a>
<a name='line36'></a><span id=t_com>-- Registers --</span>
<a name='line37'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>Registers</span>: <span id=t_idt>REG_FILE</span>;
<a name='line38'></a>
<a name='line39'></a><span id=t_com>-- Data Memory --</span>
<a name='line40'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>Data</span>: <span id=t_idt>MEM_DATA</span>;
<a name='line41'></a>
<a name='line42'></a><span id=t_com>-- Instruction --</span>
<a name='line43'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>Instruction</span>: <span id=t_idt>WORD</span>;
<a name='line44'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>RInst</span>: <span id=t_idt>RTYPE_INSTRUCTION</span>;
<a name='line45'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>IInst</span>: <span id=t_idt>ITYPE_INSTRUCTION</span>;
<a name='line46'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>JInst</span>: <span id=t_idt>JTYPE_INSTRUCTION</span>;
<a name='line47'></a>
<a name='line48'></a><span id=t_com>-- Control Signals --</span>
<a name='line49'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>ZeroFlag</span>: <span id=t_sdt>STD_LOGIC</span> := <span id=t_cns>'0'</span>;
<a name='line50'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>RegDst</span>, <span id=t_idt>RegWriteSrc</span>, <span id=t_idt>PCSrc</span>: <span id=t_sdt>STD_LOGIC_VECTOR</span> (<span id=t_cns>1</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>) := <span id=t_cns>"00"</span>;
<a name='line51'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>RegWrite</span>: <span id=t_sdt>STD_LOGIC</span> := <span id=t_cns>'1'</span>;
<a name='line52'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>ALUSrc1</span>, <span id=t_idt>ALUSrc2</span>, <span id=t_idt>MemWrite</span>, <span id=t_idt>MemRead</span>, <span id=t_idt>MemToReg</span>, <span id=t_idt>MemSrc</span>: <span id=t_sdt>STD_LOGIC</span> := <span id=t_cns>'0'</span>;
<a name='line53'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>ALUOP</span>: <span id=t_idt>ALU_OP</span>;
<a name='line54'></a>
<a name='line55'></a><span id=t_com>-- Calculated signals --</span>
<a name='line56'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>RsX4</span>, <span id=t_idt>Imm6_16</span>, <span id=t_idt>Imm12_16</span>, <span id=t_idt>RtLower</span>, <span id=t_idt>MemLower</span>, <span id=t_idt>PCplus2</span>, <span id=t_idt>PCplus1</span>, <span id=t_idt>PC_Imm6</span>, <span id=t_idt>PC_Imm12</span>, <span id=t_idt>ImmSh4</span>: <span id=t_idt>WORD</span> := <span id=t_idt>X</span><span id=t_cns>"0000"</span>;
<a name='line57'></a>
<a name='line58'></a><span id=t_com>-- Busses --</span>
<a name='line59'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>DataRead_1</span>, <span id=t_idt>DataRead_2</span>, <span id=t_idt>DataWrite</span>, <span id=t_idt>ALUOutput</span>, <span id=t_idt>MemOutput</span>, <span id=t_idt>MemInput</span>, <span id=t_idt>PCIn</span>: <span id=t_idt>WORD</span> := <span id=t_idt>X</span><span id=t_cns>"0000"</span>;
<a name='line60'></a>
<a name='line61'></a><span id=t_com>-- Muxes Signals --</span>
<a name='line62'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>RegDstOutput</span>: <span id=t_sdt>STD_LOGIC_VECTOR</span> (<span id=t_cns>2</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>) := <span id=t_cns>"000"</span>;
<a name='line63'></a><span id=t_kwd>SIGNAL</span> <span id=t_idt>ALUSrc1Output</span>, <span id=t_idt>ALUSrc2Output</span>, <span id=t_idt>MemToRegOut</span>: <span id=t_idt>WORD</span> := <span id=t_idt>X</span><span id=t_cns>"0000"</span>;
<a name='line64'></a>
<a name='line65'></a><span id=t_kwd>BEGIN</span>
<a name='line66'></a>    <span id=t_idt>CLK</span> &lt;= <span id=t_kwd>NOT</span> <span id=t_idt>CLK</span> <span id=t_kwd>AFTER</span> <span id=t_cns>50</span> <span id=t_idt>NS</span>;
<a name='line67'></a>    <span id=t_idt>RInst</span> &lt;= <span id=t_idt>RConv(Instruction</span>);
<a name='line68'></a>    <span id=t_idt>IInst</span> &lt;= <span id=t_idt>IConv(Instruction</span>);
<a name='line69'></a>    <span id=t_idt>JInst</span> &lt;= <span id=t_idt>JConv(Instruction</span>);
<a name='line70'></a>    
<a name='line71'></a>    <span id=t_com>-- Calculated Signals --</span>
<a name='line72'></a>    <span id=t_idt>RsX4</span> &lt;= <span id=t_idt>to_stdlogicvector(to_bitvector(DataRead_1</span>) <span id=t_kwd>SLL</span> <span id=t_cns>2</span>);
<a name='line73'></a>    <span id=t_idt>Imm6_16</span> &lt;= <span id=t_sdt>STD_LOGIC_VECTOR</span>(<span id=t_idt>resize</span>(<span id=t_sdt>SIGNED</span>(<span id=t_idt>IInst.Immediate</span>), <span id=t_idt>Imm6_16'LENGTH</span>));
<a name='line74'></a>    <span id=t_idt>Imm12_16</span> &lt;= <span id=t_sdt>STD_LOGIC_VECTOR</span>(<span id=t_idt>resize</span>(<span id=t_sdt>SIGNED</span>(<span id=t_idt>JInst.Immediate</span>), <span id=t_idt>Imm12_16'LENGTH</span>));
<a name='line75'></a>    <span id=t_idt>RtLower</span> &lt;= <span id=t_sdt>STD_LOGIC_VECTOR</span>(<span id=t_idt>resize</span>(<span id=t_sdt>SIGNED</span>(<span id=t_idt>DataRead_2</span>(<span id=t_cns>7</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>)), <span id=t_idt>RtLower'LENGTH</span>));
<a name='line76'></a>    <span id=t_idt>MemLower</span> &lt;= <span id=t_sdt>STD_LOGIC_VECTOR</span>(<span id=t_idt>resize</span>(<span id=t_sdt>SIGNED</span>(<span id=t_idt>MemOutput</span>(<span id=t_cns>7</span> <span id=t_kwd>DOWNTO</span> <span id=t_cns>0</span>)), <span id=t_idt>MemLower'LENGTH</span>));
<a name='line77'></a>    <span id=t_idt>PCplus2</span> &lt;=  <span id=t_sdt>STD_LOGIC_VECTOR</span>(<span id=t_idt>to_unsigned(PC</span> + <span id=t_cns>2</span>, <span id=t_idt>PCplus2'LENGTH</span>));
<a name='line78'></a>    <span id=t_idt>PCplus1</span> &lt;=  <span id=t_sdt>STD_LOGIC_VECTOR</span>(<span id=t_idt>to_unsigned(PC</span> + <span id=t_cns>1</span>, <span id=t_idt>PCplus1'LENGTH</span>));
<a name='line79'></a>    <span id=t_idt>PC_Imm6</span> &lt;=  <span id=t_sdt>STD_LOGIC_VECTOR</span>(<span id=t_idt>to_unsigned(PC</span> + <span id=t_idt>conv_integer(IInst.Immediate</span>), <span id=t_idt>PC_Imm6'LENGTH</span>));
<a name='line80'></a>    <span id=t_idt>PC_Imm12</span> &lt;= <span id=t_sdt>STD_LOGIC_VECTOR</span>(<span id=t_idt>to_unsigned(PC</span> + <span id=t_idt>conv_integer(JInst.Immediate</span>), <span id=t_idt>PC_Imm12'LENGTH</span>));
<a name='line81'></a>    <span id=t_idt>ImmSh4</span> &lt;= <span id=t_idt>to_stdlogicvector(to_bitvector(Imm12_16</span>) <span id=t_kwd>SLL</span> <span id=t_cns>4</span>);
<a name='line82'></a>    
<a name='line83'></a>    <span id=t_com>-- Muxes --</span>
<a name='line84'></a>    <span id=t_idt>M1</span>: <span id=t_idt>Mux4</span> <span id=t_kwd>GENERIC MAP</span> (<span id=t_cns>3</span>) <span id=t_kwd>PORT MAP</span> (<span id=t_idt>RInst.Rd</span>, <span id=t_idt>RInst.Rt</span>, <span id=t_cns>"111"</span>, <span id=t_cns>"001"</span>, <span id=t_idt>RegDst</span>, <span id=t_idt>RegDstOutput</span>);
<a name='line85'></a>    <span id=t_idt>M2</span>: <span id=t_idt>Mux2</span> <span id=t_kwd>PORT MAP</span> (<span id=t_idt>DataRead_1</span>, <span id=t_idt>RsX4</span>, <span id=t_idt>ALUSrc1</span>, <span id=t_idt>ALUSrc1Output</span>);
<a name='line86'></a>    <span id=t_idt>M3</span>: <span id=t_idt>Mux2</span> <span id=t_kwd>PORT MAP</span> (<span id=t_idt>DataRead_2</span>, <span id=t_idt>Imm6_16</span>, <span id=t_idt>ALUSrc2</span>, <span id=t_idt>ALUSrc2Output</span>);
<a name='line87'></a>    <span id=t_idt>M4</span>: <span id=t_idt>Mux2</span> <span id=t_kwd>PORT MAP</span> (<span id=t_idt>DataRead_2</span>, <span id=t_idt>RtLower</span>, <span id=t_idt>MemSrc</span>, <span id=t_idt>MemInput</span>);
<a name='line88'></a>    <span id=t_idt>M5</span>: <span id=t_idt>Mux2</span> <span id=t_kwd>PORT MAP</span> (<span id=t_idt>MemOutput</span>, <span id=t_idt>MemLower</span>, <span id=t_idt>MemToReg</span>, <span id=t_idt>MemToRegOut</span>);
<a name='line89'></a>    <span id=t_idt>M6</span>: <span id=t_idt>Mux4</span> <span id=t_kwd>PORT MAP</span> (<span id=t_idt>ALUOutput</span>, <span id=t_idt>MemToRegOut</span>, <span id=t_idt>PCplus2</span>, <span id=t_idt>ImmSh4</span>, <span id=t_idt>RegWriteSrc</span>, <span id=t_idt>DataWrite</span>);
<a name='line90'></a>    <span id=t_idt>M7</span>: <span id=t_idt>Mux4</span> <span id=t_kwd>PORT MAP</span> (<span id=t_idt>PCplus1</span>, <span id=t_idt>PC_Imm6</span>, <span id=t_idt>PC_Imm12</span>, <span id=t_idt>Ra</span>, <span id=t_idt>PCSrc</span>, <span id=t_idt>PCIn</span>);
<a name='line91'></a>    
<a name='line92'></a>    <span id=t_idt>ControlBlock</span>:   <span id=t_kwd>ENTITY</span> <span id=t_idt>work.Control_Unit(MIPS_Control</span>)
<a name='line93'></a>        <span id=t_kwd>PORT MAP</span>(<span id=t_idt>RInst.OPCODE</span>, <span id=t_idt>RInst.FUNC</span>, <span id=t_idt>ZeroFlag</span>, <span id=t_idt>RegDst</span>, <span id=t_idt>RegWriteSrc</span>, <span id=t_idt>PCSrc</span>, 
<a name='line94'></a>        <span id=t_idt>RegWrite</span>, <span id=t_idt>ALUSrc1</span>, <span id=t_idt>ALUSrc2</span>, <span id=t_idt>MemWrite</span>, <span id=t_idt>MemRead</span>, <span id=t_idt>MemToReg</span>, <span id=t_idt>MemSrc</span>, <span id=t_idt>ALUOP</span>);
<a name='line95'></a>    
<a name='line96'></a>    <span id=t_idt>InstMemBlock</span>:   <span id=t_kwd>ENTITY</span> <span id=t_idt>work.Instruction_Memory(Inst_Mem</span>)
<a name='line97'></a>        <span id=t_kwd>PORT MAP</span>(<span id=t_idt>PC</span>, <span id=t_idt>Instruction</span>);
<a name='line98'></a>        
<a name='line99'></a>    <span id=t_idt>DataMemBlock</span>:   <span id=t_kwd>ENTITY</span> <span id=t_idt>work.Data_Memory(Data_Mem</span>)
<a name='line100'></a>        <span id=t_kwd>PORT MAP</span>(<span id=t_idt>CLK</span>, <span id=t_idt>ALUOutput</span>, <span id=t_idt>MemInput</span>, <span id=t_idt>MemRead</span>, <span id=t_idt>MemWrite</span>, <span id=t_idt>MemOutput</span>, <span id=t_idt>Data</span>);
<a name='line101'></a>        
<a name='line102'></a>    <span id=t_idt>RegFileBlock</span>:   <span id=t_kwd>ENTITY</span> <span id=t_idt>work.Register_File(MIPS_Registers</span>)
<a name='line103'></a>        <span id=t_kwd>PORT MAP</span>(<span id=t_idt>CLK</span>, <span id=t_idt>RInst.Rs</span>, <span id=t_idt>RInst.Rt</span>, <span id=t_idt>RegDstOutput</span>, <span id=t_idt>DataWrite</span>, <span id=t_idt>RegWrite</span>, <span id=t_idt>DataRead_1</span>, <span id=t_idt>DataRead_2</span>, <span id=t_idt>Registers</span>);
<a name='line104'></a>        
<a name='line105'></a>    <span id=t_idt>ALUBlock</span>:       <span id=t_kwd>ENTITY</span> <span id=t_idt>work.ALU(ALU_MIPS</span>)
<a name='line106'></a>        <span id=t_kwd>PORT MAP</span>(<span id=t_idt>ALUSrc1Output</span>, <span id=t_idt>ALUSrc2Output</span>, <span id=t_idt>ALUOP</span>, <span id=t_idt>ALUOutput</span>, <span id=t_idt>ZeroFlag</span>);
<a name='line107'></a>    <span id=t_kwd>PROCESS</span> (<span id=t_idt>CLK</span>)
<a name='line108'></a>    <span id=t_kwd>BEGIN</span>
<a name='line109'></a>        <span id=t_kwd>IF</span> <span id=t_idt>rising_edge(CLK</span>) <span id=t_kwd>AND</span> <span id=t_idt>RInst.Opcode</span> /= <span id=t_idt>TERMINATE</span> <span id=t_kwd>THEN</span>
<a name='line110'></a>            <span id=t_idt>PC</span> &lt;= <span id=t_idt>PC</span> + <span id=t_cns>1</span>;
<a name='line111'></a>        <span id=t_kwd>END IF</span>;
<a name='line112'></a>    <span id=t_kwd>END PROCESS</span>;
<a name='line113'></a><span id=t_kwd>END ARCHITECTURE</span> <span id=t_idt>SingleCycle</span>;
</pre>
<br/>Active-HDL Student Edition<br/>
</body>
</html>
